program: run_GNN.py
method: random
parameters:
  dataset:
    values: [chameleon, squirrel_ Cora]
  function:
    values: [greed_non_linear]
  gnl_W_norm:
    values: [False]
  m3_path_dep:
    values: [None]
  path_dep_norm:
    values: [None]
  gnl_activation:
    values: [perona_malik, pm_gaussian]
  gnl_measure:
    values: [ones]
  drift:
    values: [False]
  epoch:
    values: [150]
  num_splits:
    values: [2]
  self_loop_weight:
    values: [0.0]
  no_early:
    values: [True]
  method:
    values: [euler]
  gnl_style:
    values: [general_graph]
  gnl_W_style:
    values: [sum, tri, diag_dom]
  time_dep_w:
    values: [None]
  time_dep_omega:
    values: [None]
  time_dep_q:
    values: [None]
  gnl_omega:
    values: [zero]
  m1_W_eig:
    values: [False]
  m2_W_eig:
    values: [False]
  pointwise_nonlin:
    values: [None]
  source_term:
    values: [None, scalar]
  conv_batch_norm:
    values: [None]
  graph_pool:
    values: [None]
  hidden_dim:
    values: [64, 128]
  max_nfe:
    values: [10000]
  time:
    distribution: uniform
    min: 2.0
    max: 5.0
  step_size:
    values: [0.5, 1.0]
  input_dropout:
    distribution: uniform
    min: 0.3
    max: 0.6
  dropout:
    distribution: uniform
    min: 0.2
    max: 0.5
  lr:
    distribution: uniform
    min: 0.0005
    max: 0.01
  decay:
    distribution: uniform
    min: 0.000
    max: 0.01
  optimizer:
    values: [adam]
command:
  - ${env}
  - python3
  - ${program}
  - ${args}
  - --wandb
  - --wandb_sweep
entity: graph_neural_diffusion
project: perona_malik